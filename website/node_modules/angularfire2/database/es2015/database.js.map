{"version":3,"sources":["../../../../src/database/database.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C,OAAO,mBAAA,CAAoB;AAC3B,OAAO,EAAE,WAAA,EAAY,MAAO,cAAA,CAAe;AAE3C,OAAO,EAAE,MAAA,EAAO,MAAO,SAAA,CAAU;AACjC,OAAO,EAAE,mBAAA,EAAoB,MAAO,yBAAA,CAA0B;AAC9D,OAAO,EAAE,qBAAA,EAAsB,MAAO,2BAAA,CAA4B;AAGlE,MAAM;IAGJ,YAAmB,GAAgB;QAAhB,QAAG,GAAH,GAAG,CAAa;QACjC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;IACjC,CAAC;IAED,IAAI,CAAI,SAAwB,EAAE,OAAiB;QACjD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QACxC,IAAI,KAAK,GAAkB,GAAG,CAAC;QAC/B,EAAE,CAAA,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;QACD,MAAM,CAAC,mBAAmB,CAAI,KAAK,CAAC,CAAC;IACvC,CAAC;IAED,MAAM,CAAI,SAAwB;QAChC,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QACxC,MAAM,CAAC,qBAAqB,CAAI,GAAG,CAAC,CAAC;IACvC,CAAC;IAED,YAAY;QACV,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;IACxC,CAAC;;AAEI,8BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AAEK,kCAAc,GAAmE,GAAG,EAAE,CAAC;IAC9F,EAAC,IAAI,EAAE,WAAW,GAAG;CACpB,CAAC","file":"database.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { database } from 'firebase/app';\nimport 'firebase/database';\nimport { FirebaseApp } from 'angularfire2';\nimport { PathReference, DatabaseQuery, DatabaseReference, DatabaseSnapshot, ChildEvent, ListenEvent, QueryFn, AngularFireList, AngularFireObject } from './interfaces';\nimport { getRef } from './utils';\nimport { createListReference } from './list/create-reference';\nimport { createObjectReference } from './object/create-reference';\n\n\nexport class AngularFireDatabase {\n  database: database.Database;\n\n  constructor(public app: FirebaseApp) {\n    this.database = app.database();\n  }\n\n  list<T>(pathOrRef: PathReference, queryFn?: QueryFn): AngularFireList<T> {\n    const ref = getRef(this.app, pathOrRef);\n    let query: DatabaseQuery = ref;\n    if(queryFn) {\n      query = queryFn(ref);\n    }\n    return createListReference<T>(query);\n  }\n\n  object<T>(pathOrRef: PathReference): AngularFireObject<T>  {\n    const ref = getRef(this.app, pathOrRef);\n    return createObjectReference<T>(ref);    \n  }\n\n  createPushId() {\n    return this.database.ref().push().key;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: FirebaseApp, },\n];\n}\n\nexport { \n  PathReference, \n  DatabaseQuery, \n  DatabaseReference, \n  DatabaseSnapshot, \n  ChildEvent, \n  ListenEvent, \n  QueryFn, \n  AngularFireList, \n  AngularFireObject,\n  AngularFireAction,\n  Action,\n  SnapshotAction\n} from './interfaces';\n \ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}